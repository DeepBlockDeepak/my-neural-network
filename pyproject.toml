[tool.poetry]
name = "my-neural-network"
version = "0.1.0"
description = "A hand-rolled neural network project"
authors = ["DeepBlockDeepak <jordan.medina1729@gmail.com>"]
license = "MIT"
readme = "README.md"

packages = [
    { include = "activation_functions", from = "src" },
    { include = "my_neural_network", from = "src" }
]

# Python version and any project dependencies here
[tool.poetry.dependencies]
python = ">=3.10"
numpy = "^1.24.0"

# Development dependencies for formatting and linting
scikit-learn = "^1.5.2"
pandas = "^2.2.3"
matplotlib = "^3.9.3"
[tool.poetry.dev-dependencies]
isort = "^5.10.1"
black = "^24.3.0"
ruff = "^0.1.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"

[tool.isort]
profile = "black"

[tool.ruff.per-file-ignores]
# related to package imports from __init__ files.
"__init__.py" = ["F401"] 

# ignore Ambiguous variable name: `l` for "layers"
"src/my_neural_network/neuron.py" = ["E741"]
"tests/test_neuron.py" = ["E741"]

[tool.poetry.scripts]
# Formats the code using isort and black
format = "scripts.format_code:run"
# Lints the code using ruff
lint = "scripts.lint_code:run"
# Runs unit tests located in the tests/ directory
test = "scripts.run_tests:run"
# for coverage-enabled testing
coverage = "scripts.coverage_test:run"
# command to run format, lint, and test sequentially
all-checks = "scripts.all_checks:run_all"

[build-system]
requires = ["poetry-core>=1.6"]
build-backend = "poetry.core.masonry.api"